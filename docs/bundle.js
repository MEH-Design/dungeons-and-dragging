/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!***************************!*\
  !*** ./src/gameobject.ts ***!
  \***************************/
/*! no static exports found */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

eval("(void 0)([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 && context_1.id;\n    var GameObject;\n    return {\n        setters: [],\n        execute: function () {\n            GameObject = class GameObject {\n                constructor() {\n                    GameObject._addObject(this);\n                    this.attributes = {};\n                    this.timedUpdates = [];\n                }\n                setAttributes(...attributes) {\n                    attributes.forEach(Object.assign.bind(this, this.attributes));\n                }\n                static _addObject(obj) {\n                    this.objects.push(obj);\n                }\n                static getEntity(...names) {\n                    return GameObject._getResource(GameObject.getApp().root, 'findByName', names);\n                }\n                static getMouse() {\n                    if (!this.mouse) {\n                        this.mouse = new pc.Mouse(GameObject.getApp().root);\n                        this.mouse.attach(document.getElementById('canvas'));\n                    }\n                    return this.mouse;\n                }\n                static getAsset(path, type) {\n                    if (this.knownAssets[path]) {\n                        return new Promise((resolve) => {\n                            resolve(this.knownAssets[path]);\n                        });\n                    }\n                    return new Promise((resolve, reject) => {\n                        GameObject.getApp().assets.loadFromUrl(path, type, (err, asset) => {\n                            GameObject.knownAssets[path] = asset;\n                            if (err)\n                                reject(err);\n                            resolve(asset);\n                        });\n                    });\n                }\n                static requireOverride() {\n                    const error = new Error();\n                    const functionName = ((error.stack).split('at ')[2]).trim().split(' ')[0];\n                    error.message = `${functionName} needs to be overriden`;\n                    throw error;\n                }\n                static _getResource(root, functionName, names) {\n                    let resource;\n                    names.forEach((name) => {\n                        resource = (resource || root)[functionName](name);\n                    });\n                    return resource;\n                }\n                static getApp() {\n                    return pc.Application.getApplication();\n                }\n                addTimedUpdate(callback, interval = 0.2) {\n                    this.timedUpdates.push({\n                        callback: callback.bind(this),\n                        interval,\n                        counter: 0\n                    });\n                }\n                update(dt) {\n                    this.timedUpdates.forEach((tu) => {\n                        tu.counter += dt;\n                        if (tu.counter >= tu.interval) {\n                            tu.callback(tu.counter);\n                            tu.counter = 0;\n                        }\n                    });\n                }\n            };\n            GameObject.objects = [];\n            exports_1(\"default\", GameObject);\n        }\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9nYW1lb2JqZWN0LnRzPzA3N2UiXSwic291cmNlc0NvbnRlbnQiOlsiU3lzdGVtLnJlZ2lzdGVyKFtdLCBmdW5jdGlvbiAoZXhwb3J0c18xLCBjb250ZXh0XzEpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICB2YXIgX19tb2R1bGVOYW1lID0gY29udGV4dF8xICYmIGNvbnRleHRfMS5pZDtcbiAgICB2YXIgR2FtZU9iamVjdDtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZXR0ZXJzOiBbXSxcbiAgICAgICAgZXhlY3V0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgR2FtZU9iamVjdCA9IGNsYXNzIEdhbWVPYmplY3Qge1xuICAgICAgICAgICAgICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAgICAgICAgICAgICBHYW1lT2JqZWN0Ll9hZGRPYmplY3QodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlcyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWVkVXBkYXRlcyA9IFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzZXRBdHRyaWJ1dGVzKC4uLmF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlcy5mb3JFYWNoKE9iamVjdC5hc3NpZ24uYmluZCh0aGlzLCB0aGlzLmF0dHJpYnV0ZXMpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3RhdGljIF9hZGRPYmplY3Qob2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMub2JqZWN0cy5wdXNoKG9iaik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0YXRpYyBnZXRFbnRpdHkoLi4ubmFtZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEdhbWVPYmplY3QuX2dldFJlc291cmNlKEdhbWVPYmplY3QuZ2V0QXBwKCkucm9vdCwgJ2ZpbmRCeU5hbWUnLCBuYW1lcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0YXRpYyBnZXRNb3VzZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLm1vdXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1vdXNlID0gbmV3IHBjLk1vdXNlKEdhbWVPYmplY3QuZ2V0QXBwKCkucm9vdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1vdXNlLmF0dGFjaChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1vdXNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzdGF0aWMgZ2V0QXNzZXQocGF0aCwgdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5rbm93bkFzc2V0c1twYXRoXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzLmtub3duQXNzZXRzW3BhdGhdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBHYW1lT2JqZWN0LmdldEFwcCgpLmFzc2V0cy5sb2FkRnJvbVVybChwYXRoLCB0eXBlLCAoZXJyLCBhc3NldCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdhbWVPYmplY3Qua25vd25Bc3NldHNbcGF0aF0gPSBhc3NldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXJyKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGFzc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3RhdGljIHJlcXVpcmVPdmVycmlkZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZnVuY3Rpb25OYW1lID0gKChlcnJvci5zdGFjaykuc3BsaXQoJ2F0ICcpWzJdKS50cmltKCkuc3BsaXQoJyAnKVswXTtcbiAgICAgICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZSA9IGAke2Z1bmN0aW9uTmFtZX0gbmVlZHMgdG8gYmUgb3ZlcnJpZGVuYDtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0YXRpYyBfZ2V0UmVzb3VyY2Uocm9vdCwgZnVuY3Rpb25OYW1lLCBuYW1lcykge1xuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzb3VyY2U7XG4gICAgICAgICAgICAgICAgICAgIG5hbWVzLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc291cmNlID0gKHJlc291cmNlIHx8IHJvb3QpW2Z1bmN0aW9uTmFtZV0obmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb3VyY2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0YXRpYyBnZXRBcHAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwYy5BcHBsaWNhdGlvbi5nZXRBcHBsaWNhdGlvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhZGRUaW1lZFVwZGF0ZShjYWxsYmFjaywgaW50ZXJ2YWwgPSAwLjIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50aW1lZFVwZGF0ZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogY2FsbGJhY2suYmluZCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlcjogMFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdXBkYXRlKGR0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGltZWRVcGRhdGVzLmZvckVhY2goKHR1KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0dS5jb3VudGVyICs9IGR0O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR1LmNvdW50ZXIgPj0gdHUuaW50ZXJ2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dS5jYWxsYmFjayh0dS5jb3VudGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dS5jb3VudGVyID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIEdhbWVPYmplY3Qub2JqZWN0cyA9IFtdO1xuICAgICAgICAgICAgZXhwb3J0c18xKFwiZGVmYXVsdFwiLCBHYW1lT2JqZWN0KTtcbiAgICAgICAgfVxuICAgIH07XG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2dhbWVvYmplY3QudHNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!*****************************************!*\
  !*** ./src/characters/player/player.js ***!
  \*****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_characters_character_js__ = __webpack_require__(/*! characters/character.js */ 4);\n\n\nclass Player extends __WEBPACK_IMPORTED_MODULE_0_characters_character_js__[\"a\" /* default */] {\n  static getByEntity(entity) {\n    let result;\n    this.players.forEach((player) => {\n      if(player.entity === entity) {\n        result = player;\n      }\n    });\n    return result;\n  }\n\n  static _addPlayer(player) {\n    this.players = this.players || [];\n    this.players.push(player);\n  }\n\n  constructor(parent, position) {\n    const entity = new pc.Entity();\n    parent.addChild(entity);\n\n    entity.addComponent('model', {\n      type: 'box',\n    });\n\n    entity.addComponent('collision', {\n      type: 'box'\n    });\n\n    super(entity, position);\n    Player._addPlayer(this);\n  }\n\n  handleTargets() {\n    return;\n  }\n\n  select() {\n    console.log('im selected!');\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Player;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jaGFyYWN0ZXJzL3BsYXllci9wbGF5ZXIuanM/ZmQ4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hhcmFjdGVyIGZyb20gJ2NoYXJhY3RlcnMvY2hhcmFjdGVyLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIGV4dGVuZHMgQ2hhcmFjdGVyIHtcbiAgc3RhdGljIGdldEJ5RW50aXR5KGVudGl0eSkge1xuICAgIGxldCByZXN1bHQ7XG4gICAgdGhpcy5wbGF5ZXJzLmZvckVhY2goKHBsYXllcikgPT4ge1xuICAgICAgaWYocGxheWVyLmVudGl0eSA9PT0gZW50aXR5KSB7XG4gICAgICAgIHJlc3VsdCA9IHBsYXllcjtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgc3RhdGljIF9hZGRQbGF5ZXIocGxheWVyKSB7XG4gICAgdGhpcy5wbGF5ZXJzID0gdGhpcy5wbGF5ZXJzIHx8IFtdO1xuICAgIHRoaXMucGxheWVycy5wdXNoKHBsYXllcik7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihwYXJlbnQsIHBvc2l0aW9uKSB7XG4gICAgY29uc3QgZW50aXR5ID0gbmV3IHBjLkVudGl0eSgpO1xuICAgIHBhcmVudC5hZGRDaGlsZChlbnRpdHkpO1xuXG4gICAgZW50aXR5LmFkZENvbXBvbmVudCgnbW9kZWwnLCB7XG4gICAgICB0eXBlOiAnYm94JyxcbiAgICB9KTtcblxuICAgIGVudGl0eS5hZGRDb21wb25lbnQoJ2NvbGxpc2lvbicsIHtcbiAgICAgIHR5cGU6ICdib3gnXG4gICAgfSk7XG5cbiAgICBzdXBlcihlbnRpdHksIHBvc2l0aW9uKTtcbiAgICBQbGF5ZXIuX2FkZFBsYXllcih0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZVRhcmdldHMoKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc2VsZWN0KCkge1xuICAgIGNvbnNvbGUubG9nKCdpbSBzZWxlY3RlZCEnKTtcbiAgfVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY2hhcmFjdGVycy9wbGF5ZXIvcGxheWVyLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided:  */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gameobject__ = __webpack_require__(/*! gameobject */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gameobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_gameobject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_environment_orbitCamera__ = __webpack_require__(/*! environment/orbitCamera */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_environment_stages__ = __webpack_require__(/*! environment/stages */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_characters_player_player__ = __webpack_require__(/*! characters/player/player */ 1);\n// import Test from 'test';\n\n\n\n\n\nconst canvas = document.getElementById('canvas');\nconst app = new pc.Application(canvas, { });\napp.start();\n\n// fill the available space at full resolution\napp.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\napp.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n\n// ensure canvas is resized when window changes size\nwindow.addEventListener('resize', () => {\n  app.resizeCanvas();\n});\n\n// create camera entity\nconst camera = new pc.Entity('camera');\ncamera.addComponent('camera', {\n  clearColor: new pc.Color(1, 1, 1),\n});\n\n// create directional light entity\nconst light = new pc.Entity('light');\nlight.addComponent('light', {\n  color: new pc.Color(1, 1, 1),\n});\n\n// add to hierarchy\napp.root.addChild(camera);\napp.root.addChild(light);\n\n// set up initial positions and orientations\ncamera.setPosition(0, 20, 30);\ncamera.setEulerAngles(-30, 0, 0);\nconst orbitCamera = new __WEBPACK_IMPORTED_MODULE_1_environment_orbitCamera__[\"a\" /* default */](camera);\n\nlight.setEulerAngles(45, 0, 0);\n\nconst stageEntity = new pc.Entity();\nconst playerEntity = new pc.Entity();\n\napp.root.addChild(stageEntity);\napp.root.addChild(playerEntity);\n\nnew __WEBPACK_IMPORTED_MODULE_2_environment_stages__[\"a\" /* Stage */](stageEntity, orbitCamera);\nnew __WEBPACK_IMPORTED_MODULE_3_characters_player_player__[\"a\" /* default */](playerEntity, new pc.Vec3(0, 20, 0));\n\napp.on('update', (dt) => {\n  __WEBPACK_IMPORTED_MODULE_0_gameobject___default.a.objects.forEach(obj => obj.update(dt));\n});\n//\n// app.assets.loadFromUrl('/assets/clouds.jpg', 'texture', (err, asset) => {\n//   const material = new pc.PhongMaterial();\n//   material.diffuseMap = asset.resource;\n//   material.update();\n//   box.model.model.meshInstances[0].material = material;\n// });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pbmRleC5qcz85NTUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBUZXN0IGZyb20gJ3Rlc3QnO1xuaW1wb3J0IEdhbWVPYmplY3QgZnJvbSAnZ2FtZW9iamVjdCc7XG5pbXBvcnQgT3JiaXRDYW1lcmEgZnJvbSAnZW52aXJvbm1lbnQvb3JiaXRDYW1lcmEnO1xuaW1wb3J0IHsgU3RhZ2UgfSBmcm9tICdlbnZpcm9ubWVudC9zdGFnZXMnO1xuaW1wb3J0IFBsYXllciBmcm9tICdjaGFyYWN0ZXJzL3BsYXllci9wbGF5ZXInO1xuXG5jb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJyk7XG5jb25zdCBhcHAgPSBuZXcgcGMuQXBwbGljYXRpb24oY2FudmFzLCB7IH0pO1xuYXBwLnN0YXJ0KCk7XG5cbi8vIGZpbGwgdGhlIGF2YWlsYWJsZSBzcGFjZSBhdCBmdWxsIHJlc29sdXRpb25cbmFwcC5zZXRDYW52YXNGaWxsTW9kZShwYy5GSUxMTU9ERV9GSUxMX1dJTkRPVyk7XG5hcHAuc2V0Q2FudmFzUmVzb2x1dGlvbihwYy5SRVNPTFVUSU9OX0FVVE8pO1xuXG5cbi8vIGVuc3VyZSBjYW52YXMgaXMgcmVzaXplZCB3aGVuIHdpbmRvdyBjaGFuZ2VzIHNpemVcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7XG4gIGFwcC5yZXNpemVDYW52YXMoKTtcbn0pO1xuXG4vLyBjcmVhdGUgY2FtZXJhIGVudGl0eVxuY29uc3QgY2FtZXJhID0gbmV3IHBjLkVudGl0eSgnY2FtZXJhJyk7XG5jYW1lcmEuYWRkQ29tcG9uZW50KCdjYW1lcmEnLCB7XG4gIGNsZWFyQ29sb3I6IG5ldyBwYy5Db2xvcigxLCAxLCAxKSxcbn0pO1xuXG4vLyBjcmVhdGUgZGlyZWN0aW9uYWwgbGlnaHQgZW50aXR5XG5jb25zdCBsaWdodCA9IG5ldyBwYy5FbnRpdHkoJ2xpZ2h0Jyk7XG5saWdodC5hZGRDb21wb25lbnQoJ2xpZ2h0Jywge1xuICBjb2xvcjogbmV3IHBjLkNvbG9yKDEsIDEsIDEpLFxufSk7XG5cbi8vIGFkZCB0byBoaWVyYXJjaHlcbmFwcC5yb290LmFkZENoaWxkKGNhbWVyYSk7XG5hcHAucm9vdC5hZGRDaGlsZChsaWdodCk7XG5cbi8vIHNldCB1cCBpbml0aWFsIHBvc2l0aW9ucyBhbmQgb3JpZW50YXRpb25zXG5jYW1lcmEuc2V0UG9zaXRpb24oMCwgMjAsIDMwKTtcbmNhbWVyYS5zZXRFdWxlckFuZ2xlcygtMzAsIDAsIDApO1xuY29uc3Qgb3JiaXRDYW1lcmEgPSBuZXcgT3JiaXRDYW1lcmEoY2FtZXJhKTtcblxubGlnaHQuc2V0RXVsZXJBbmdsZXMoNDUsIDAsIDApO1xuXG5jb25zdCBzdGFnZUVudGl0eSA9IG5ldyBwYy5FbnRpdHkoKTtcbmNvbnN0IHBsYXllckVudGl0eSA9IG5ldyBwYy5FbnRpdHkoKTtcblxuYXBwLnJvb3QuYWRkQ2hpbGQoc3RhZ2VFbnRpdHkpO1xuYXBwLnJvb3QuYWRkQ2hpbGQocGxheWVyRW50aXR5KTtcblxubmV3IFN0YWdlKHN0YWdlRW50aXR5LCBvcmJpdENhbWVyYSk7XG5uZXcgUGxheWVyKHBsYXllckVudGl0eSwgbmV3IHBjLlZlYzMoMCwgMjAsIDApKTtcblxuYXBwLm9uKCd1cGRhdGUnLCAoZHQpID0+IHtcbiAgR2FtZU9iamVjdC5vYmplY3RzLmZvckVhY2gob2JqID0+IG9iai51cGRhdGUoZHQpKTtcbn0pO1xuLy9cbi8vIGFwcC5hc3NldHMubG9hZEZyb21VcmwoJy9hc3NldHMvY2xvdWRzLmpwZycsICd0ZXh0dXJlJywgKGVyciwgYXNzZXQpID0+IHtcbi8vICAgY29uc3QgbWF0ZXJpYWwgPSBuZXcgcGMuUGhvbmdNYXRlcmlhbCgpO1xuLy8gICBtYXRlcmlhbC5kaWZmdXNlTWFwID0gYXNzZXQucmVzb3VyY2U7XG4vLyAgIG1hdGVyaWFsLnVwZGF0ZSgpO1xuLy8gICBib3gubW9kZWwubW9kZWwubWVzaEluc3RhbmNlc1swXS5tYXRlcmlhbCA9IG1hdGVyaWFsO1xuLy8gfSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!****************************************!*\
  !*** ./src/environment/orbitCamera.js ***!
  \****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gameobject__ = __webpack_require__(/*! gameobject */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gameobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_gameobject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_characters_player_player__ = __webpack_require__(/*! characters/player/player */ 1);\n\n\n\nclass MouseInput {\n  constructor(orbitCamera) {\n    this.distanceSensitivity = 0.3;\n    this.orbitSensitivity = 0.5;\n\n    this.fromWorldPoint = new pc.Vec3();\n    this.toWorldPoint = new pc.Vec3();\n    this.worldDiff = new pc.Vec3();\n    this.app = __WEBPACK_IMPORTED_MODULE_0_gameobject___default.a.getApp();\n    this.orbitCamera = orbitCamera;\n    this.mouse = __WEBPACK_IMPORTED_MODULE_0_gameobject___default.a.getMouse();\n    \n    this.entity = orbitCamera.entity;\n\n    if (this.orbitCamera) {\n      const onMouseOut = e => this.onMouseOut(e);\n\n      this.mouse.on(pc.EVENT_MOUSEDOWN, this.onMouseDown, this);\n      this.mouse.on(pc.EVENT_MOUSEUP, this.onMouseUp, this);\n      this.mouse.on(pc.EVENT_MOUSEMOVE, this.onMouseMove, this);\n      this.mouse.on(pc.EVENT_MOUSEWHEEL, this.onMouseWheel, this);\n\n      // Listen to when the mouse travels out of the window\n      window.addEventListener('mouseout', onMouseOut, false);\n    }\n\n    // Disabling the context menu stops the browser displaying a menu when\n    // you right-click the page\n    this.mouse.disableContextMenu();\n\n    this.lookButtonDown = false;\n    this.panButtonDown = false;\n    this.lastPoint = new pc.Vec2();\n  }\n\n  pan(screenPoint) {\n    const fromWorldPoint = this.fromWorldPoint;\n    const toWorldPoint = this.toWorldPoint;\n    const worldDiff = this.worldDiff;\n\n    // For panning to work at any zoom level, we use screen point to world projection\n    // to work out how far we need to pan the pivotEntity in world space\n    const camera = this.entity.camera;\n    const distance = this.orbitCamera.distance;\n\n    camera.screenToWorld(screenPoint.x, screenPoint.y, distance, fromWorldPoint);\n    camera.screenToWorld(this.lastPoint.x, this.lastPoint.y, distance, toWorldPoint);\n\n    worldDiff.sub2(toWorldPoint, fromWorldPoint);\n\n    this.orbitCamera.pivotPoint.add(worldDiff);\n  }\n\n  onMouseDown(event) {\n    // select players on click\n    const camera = this.entity.camera;\n    const from = camera.screenToWorld(event.x, event.y, camera.nearClip);\n    const to = camera.screenToWorld(event.x, event.y, camera.farClip);\n\n    var result = __WEBPACK_IMPORTED_MODULE_0_gameobject___default.a.getApp().systems.rigidbody.raycastFirst(from, to);\n    if(result) {\n        const player = __WEBPACK_IMPORTED_MODULE_1_characters_player_player__[\"a\" /* default */].getByEntity(result.entity);\n        if(player) {\n          player.select();\n        }\n    }\n    \n    switch (event.button) {\n      case pc.MOUSEBUTTON_LEFT:\n        // this.lookButtonDown = true;\n        break;\n\n      case pc.MOUSEBUTTON_MIDDLE:\n      case pc.MOUSEBUTTON_RIGHT:\n        this.lookButtonDown = true;\n        break;\n      default: break;\n    }\n  }\n\n  onMouseUp(event) {\n    switch (event.button) {\n      case pc.MOUSEBUTTON_LEFT:\n        this.lookButtonDown = false;\n        break;\n\n      case pc.MOUSEBUTTON_MIDDLE:\n      case pc.MOUSEBUTTON_RIGHT:\n        this.panButtonDown = false;\n        break;\n      default: break;\n    }\n  }\n\n  onMouseMove(event) {\n    if (this.lookButtonDown) {\n      this.orbitCamera.pitch -= event.dy * this.orbitSensitivity;\n      this.orbitCamera.yaw -= event.dx * this.orbitSensitivity;\n    } else if (this.panButtonDown) {\n      this.pan(event);\n    }\n\n    this.lastPoint.set(event.x, event.y);\n  }\n\n  onMouseWheel(event) {\n    this.orbitCamera.distance -=\n      event.wheel * this.distanceSensitivity * this.orbitCamera.distance * 0.1;\n    event.event.preventDefault();\n  }\n\n  onMouseOut() {\n    this.lookButtonDown = false;\n    this.panButtonDown = false;\n  }\n}\n\n\nclass OrbitCamera extends __WEBPACK_IMPORTED_MODULE_0_gameobject___default.a {\n  constructor(entity) {\n    super();\n    this.distanceMax = 700;\n    this.distanceMin = 100;\n    this.pitchAngleMax = 90;\n    this.pitchAngleMin = -90;\n    this.inertiaFactor = 0;\n    this.distanceFactor = 0.4;\n    this.focusEntity = entity;\n    this.frameOnStart = true;\n\n    this.app = __WEBPACK_IMPORTED_MODULE_0_gameobject___default.a.getApp();\n    this.entity = entity;\n\n    this.distanceBetween = new pc.Vec3();\n    this.quatWithoutYaw = new pc.Quat();\n    this.yawOffset = new pc.Quat();\n    this.mouseInput = new MouseInput(this);\n\n    const onWindowResize = () => {\n      this._checkAspectRatio();\n    };\n\n    super.addTimedUpdate((dt) => {\n      // Add inertia, if any\n      const t = this.inertiaFactor === 0 ? 1 : Math.min(dt / this.inertiaFactor, 1);\n      this._distance = pc.math.lerp(this._distance, this._targetDistance, t);\n      this._yaw = pc.math.lerp(this._yaw, this._targetYaw, t);\n      this._pitch = pc.math.lerp(this._pitch, this._targetPitch, t);\n\n      this._updatePosition();\n    }, 0);\n\n    window.addEventListener('resize', onWindowResize, false);\n    this._checkAspectRatio();\n\n    // Find all the models in the scene that are under the focused entity\n    this._modelsAabb = new pc.BoundingBox();\n    this._buildAabb(this.focusEntity || this.app.root, 0);\n\n    this.entity.lookAt(this._modelsAabb.center);\n\n    this._pivotPoint = new pc.Vec3();\n    this._pivotPoint.copy(this._modelsAabb.center);\n\n    // Calculate the camera euler angle rotation around x and y axes\n    // This allows us to place the camera at a particular rotation to begin with in the scene\n    const cameraQuat = this.entity.getRotation();\n\n    // Preset the camera\n    this._yaw = OrbitCamera._calcYaw(cameraQuat);\n    this._pitch = this._clampPitchAngle(this._calcPitch(cameraQuat, this._yaw));\n    this.entity.setLocalEulerAngles(this._pitch, this._yaw, 0);\n\n    this._distance = 0;\n\n    this._targetYaw = this._yaw;\n    this._targetPitch = this._pitch;\n\n    // If we have ticked focus on start, then attempt to position the camera where it frames\n    // the focused entity and move the pivot point to entity's position otherwise, set the distance\n    // to be between the camera position in the scene and the pivot point\n    if (this.frameOnStart) {\n      this.focus(this.focusEntity || this.app.root);\n    } else {\n      const distanceBetween = new pc.Vec3();\n      distanceBetween.sub2(this.entity.getPosition(), this._pivotPoint);\n      this._distance = this._clampDistance(distanceBetween.length());\n    }\n\n    this._targetDistance = this._distance;\n  }\n\n  _clampPitchAngle(pitch) {\n    // Negative due as the pitch is inversed since the camera is orbiting the entity\n    return pc.math.clamp(pitch, -this.pitchAngleMax, -this.pitchAngleMin);\n  }\n\n  _calcPitch(quat, yaw) {\n    const quatWithoutYaw = this.quatWithoutYaw;\n    const yawOffset = this.yawOffset;\n\n    yawOffset.setFromEulerAngles(0, -yaw, 0);\n    quatWithoutYaw.mul2(yawOffset, quat);\n\n    const transformedForward = new pc.Vec3();\n\n    quatWithoutYaw.transformVector(pc.Vec3.FORWARD, transformedForward);\n\n    return Math.atan2(transformedForward.y, -transformedForward.z) * pc.math.RAD_TO_DEG;\n  }\n\n  // Moves the camera to look at an entity and all its children so they are all in the view\n  focus(focusEntity, transition = false) {\n    // Calculate an bounding box that encompasses all the models to frame in the camera view\n    this._buildAabb(focusEntity, 0);\n\n    const halfExtents = this._modelsAabb.halfExtents;\n\n    let distance = Math.max(halfExtents.x, Math.max(halfExtents.y, halfExtents.z));\n    distance /= Math.tan(0.5 * this.entity.camera.fov * pc.math.DEG_TO_RAD);\n    distance *= 2;\n\n    this.distance = distance;\n    this._removeInertia();\n    this._pivotPoint.copy(focusEntity.getPosition());\n    this.transition = transition;\n    // this._pivotPoint.copy(this._modelsAabb.center);\n  }\n\n  _updatePosition() {\n    // Work out the camera position based on the pivot point, pitch, yaw and distance\n    this.entity.setLocalEulerAngles(this._pitch, this._yaw, 0);\n\n    const position = this.entity.getPosition();\n    position.copy(this.entity.forward);\n    position.scale(-this._distance * this.distanceFactor);\n    position.add(this.pivotPoint);\n\n    const diff = position.clone().sub(this.entity.getPosition());\n    if (diff.length() <= 0.1) {\n      this.transition = false;\n    }\n\n    diff.scale(this.transition ? 0.1 : 1);\n    this.entity.setPosition(this.entity.getPosition().add(diff));\n  }\n\n\n  _removeInertia() {\n    this._yaw = this._targetYaw;\n    this._pitch = this._targetPitch;\n    this._distance = this._targetDistance;\n  }\n\n\n  _checkAspectRatio() {\n    const height = this.app.graphicsDevice.height;\n    const width = this.app.graphicsDevice.width;\n\n    // Match the axis of FOV to match the aspect ratio of the canvas so\n    // the focused entities is always in frame\n    this.entity.camera.horizontalFov = height > width;\n  }\n\n\n  _buildAabb(entity, _modelsAdded) {\n    let i = 0;\n    let modelsAdded = _modelsAdded;\n\n    if (entity.model) {\n      const mi = entity.model.meshInstances;\n      for (i = 0; i < mi.length; i += 1) {\n        if (modelsAdded === 0) {\n          this._modelsAabb.copy(mi[i].aabb);\n        } else {\n          this._modelsAabb.add(mi[i].aabb);\n        }\n\n        modelsAdded += 1;\n      }\n    }\n    //\n    // for (i = 1; i < entity.children.length; i += 1) {\n    //   modelsAdded += this._buildAabb(entity.children[i], modelsAdded);\n    // }\n\n    return modelsAdded;\n  }\n\n  static _calcYaw(quat) {\n    const transformedForward = new pc.Vec3();\n    quat.transformVector(pc.Vec3.FORWARD, transformedForward);\n\n    return Math.atan2(-transformedForward.x, -transformedForward.z) * pc.math.RAD_TO_DEG;\n  }\n\n  _clampDistance(distance) {\n    if (this.distanceMax > 0) {\n      return pc.math.clamp(distance, this.distanceMin, this.distanceMax);\n    }\n    return Math.max(distance, this.distanceMin);\n  }\n\n  get distance() {\n    return this._targetDistance;\n  }\n\n  set distance(value) {\n    this._targetDistance = this._clampDistance(value);\n  }\n\n\n  get pitch() {\n    return this._targetPitch;\n  }\n\n  set pitch(value) {\n    this._targetPitch = this._clampPitchAngle(value);\n  }\n\n\n  get yaw() {\n    return this._targetYaw;\n  }\n\n  set yaw(value) {\n    this._targetYaw = value;\n\n    // Ensure that the yaw takes the shortest route by making sure that\n    // the difference between the targetYaw and the actual is 180 degrees\n    // in either direction\n    const diff = this._targetYaw - this._yaw;\n    const reminder = diff % 360;\n    if (reminder > 180) {\n      this._targetYaw = this._yaw - (360 - reminder);\n    } else if (reminder < -180) {\n      this._targetYaw = this._yaw + (360 + reminder);\n    } else {\n      this._targetYaw = this._yaw + reminder;\n    }\n  }\n\n\n  get pivotPoint() {\n    return this._pivotPoint;\n  }\n\n  set pivotPoint(value) {\n    this._pivotPoint.copy(value);\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = OrbitCamera;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!*************************************!*\
  !*** ./src/characters/character.js ***!
  \*************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gameobject__ = __webpack_require__(/*! gameobject */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gameobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_gameobject__);\n\n\nclass Character extends __WEBPACK_IMPORTED_MODULE_0_gameobject___default.a {\n  constructor(entity, position, attributes = {}) {\n    super();\n    super.setAttributes({\n      searchInterval: 0.1,\n      range: 2,\n      material: new pc.PhongMaterial(),\n    }, attributes);\n    super.addTimedUpdate(this._searchForTargets, this.attributes.searchInterval);\n    this.targets = [];\n    this.entity = entity;\n    this.entity.model.material = this.attributes.material;\n    this.entity.setPosition(position);\n    this.entity.enabled = true;\n\n    this.entity.addComponent('rigidbody', {\n      type: 'dynamic',\n    });\n  }\n  addTarget(target) {\n    this.targets.push(target);\n  }\n  _searchForTargets(dt) {\n    const targetsInRange = [];\n    const targetsOutOfRange = [];\n    this.targets.forEach((target) => {\n      (this._isInRange(this.entity, target) ? targetsInRange : targetsOutOfRange).push(target);\n    });\n    this.handleTargets(dt, targetsInRange, targetsOutOfRange);\n  }\n  _isInRange(entity, target) {\n    const distance = target.getPosition().clone().sub(entity.getPosition()).length();\n    return distance <= this.attributes.range;\n  }\n  handleTargets(dt, targetsInRange, targetsOutOfRange) {\n    __WEBPACK_IMPORTED_MODULE_0_gameobject___default.a.requireOverride();\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Character;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jaGFyYWN0ZXJzL2NoYXJhY3Rlci5qcz8xODdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lT2JqZWN0IGZyb20gJ2dhbWVvYmplY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGFyYWN0ZXIgZXh0ZW5kcyBHYW1lT2JqZWN0IHtcbiAgY29uc3RydWN0b3IoZW50aXR5LCBwb3NpdGlvbiwgYXR0cmlidXRlcyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICBzdXBlci5zZXRBdHRyaWJ1dGVzKHtcbiAgICAgIHNlYXJjaEludGVydmFsOiAwLjEsXG4gICAgICByYW5nZTogMixcbiAgICAgIG1hdGVyaWFsOiBuZXcgcGMuUGhvbmdNYXRlcmlhbCgpLFxuICAgIH0sIGF0dHJpYnV0ZXMpO1xuICAgIHN1cGVyLmFkZFRpbWVkVXBkYXRlKHRoaXMuX3NlYXJjaEZvclRhcmdldHMsIHRoaXMuYXR0cmlidXRlcy5zZWFyY2hJbnRlcnZhbCk7XG4gICAgdGhpcy50YXJnZXRzID0gW107XG4gICAgdGhpcy5lbnRpdHkgPSBlbnRpdHk7XG4gICAgdGhpcy5lbnRpdHkubW9kZWwubWF0ZXJpYWwgPSB0aGlzLmF0dHJpYnV0ZXMubWF0ZXJpYWw7XG4gICAgdGhpcy5lbnRpdHkuc2V0UG9zaXRpb24ocG9zaXRpb24pO1xuICAgIHRoaXMuZW50aXR5LmVuYWJsZWQgPSB0cnVlO1xuXG4gICAgdGhpcy5lbnRpdHkuYWRkQ29tcG9uZW50KCdyaWdpZGJvZHknLCB7XG4gICAgICB0eXBlOiAnZHluYW1pYycsXG4gICAgfSk7XG4gIH1cbiAgYWRkVGFyZ2V0KHRhcmdldCkge1xuICAgIHRoaXMudGFyZ2V0cy5wdXNoKHRhcmdldCk7XG4gIH1cbiAgX3NlYXJjaEZvclRhcmdldHMoZHQpIHtcbiAgICBjb25zdCB0YXJnZXRzSW5SYW5nZSA9IFtdO1xuICAgIGNvbnN0IHRhcmdldHNPdXRPZlJhbmdlID0gW107XG4gICAgdGhpcy50YXJnZXRzLmZvckVhY2goKHRhcmdldCkgPT4ge1xuICAgICAgKHRoaXMuX2lzSW5SYW5nZSh0aGlzLmVudGl0eSwgdGFyZ2V0KSA/IHRhcmdldHNJblJhbmdlIDogdGFyZ2V0c091dE9mUmFuZ2UpLnB1c2godGFyZ2V0KTtcbiAgICB9KTtcbiAgICB0aGlzLmhhbmRsZVRhcmdldHMoZHQsIHRhcmdldHNJblJhbmdlLCB0YXJnZXRzT3V0T2ZSYW5nZSk7XG4gIH1cbiAgX2lzSW5SYW5nZShlbnRpdHksIHRhcmdldCkge1xuICAgIGNvbnN0IGRpc3RhbmNlID0gdGFyZ2V0LmdldFBvc2l0aW9uKCkuY2xvbmUoKS5zdWIoZW50aXR5LmdldFBvc2l0aW9uKCkpLmxlbmd0aCgpO1xuICAgIHJldHVybiBkaXN0YW5jZSA8PSB0aGlzLmF0dHJpYnV0ZXMucmFuZ2U7XG4gIH1cbiAgaGFuZGxlVGFyZ2V0cyhkdCwgdGFyZ2V0c0luUmFuZ2UsIHRhcmdldHNPdXRPZlJhbmdlKSB7XG4gICAgR2FtZU9iamVjdC5yZXF1aXJlT3ZlcnJpZGUoKTtcbiAgfVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY2hhcmFjdGVycy9jaGFyYWN0ZXIuanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/*!***********************************!*\
  !*** ./src/environment/stages.js ***!
  \***********************************/
/*! exports provided: Terrain, Level, Stage */
/*! exports used: Stage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_noisejs__ = __webpack_require__(/*! noisejs */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_noisejs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_noisejs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_javascript_astar__ = __webpack_require__(/*! javascript-astar */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_javascript_astar___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_javascript_astar__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__gameobject__ = __webpack_require__(/*! ../gameobject */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__gameobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__gameobject__);\n\n\n\n\nconst rand = (...arr) => {\n  let args = arr;\n  if (args.length === 0) {\n    args = [2];\n  }\n  if (args.length === 1) {\n    // use 1: rand(max)\n    return Math.floor(Math.random() * args[0]);\n  }\n  // use 2: rand(min, max)\n  return Math.floor((Math.random() * (args[1] - args[0])) + args[0]);\n};\n\nclass Terrain extends __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a {\n  _createNoiseMap(options) {\n    const mapWidth = this.attributes.size.x - 2;\n    const mapHeight = this.attributes.size.y - 2;\n\n    let noiseMap = [];\n    const noise = new __WEBPACK_IMPORTED_MODULE_0_noisejs__[\"Noise\"](Math.random());\n    for (let y = 0; y < mapHeight; y += 1) {\n      noiseMap[y] = [];\n\n      for (let x = 0; x < mapWidth; x += 1) {\n        // .simplex2d is between -1 and 1 per default, we need it between 0 and 1\n        noiseMap[y][x] = (noise.simplex2(y * 0.1, x * 0.1) + 1) * 0.5;\n        // clamp the noiseMap between 0.5 and 1, to make room for possible rivers (0 to 0.5)\n        noiseMap[y][x] = (noiseMap[y][x] + 1) * 0.5;\n      }\n    }\n\n    if (Math.random() <= this.attributes.riverProbability) {\n      const edges = {\n        x: [0, mapHeight - 1],\n        y: [0, mapWidth - 1],\n      };\n\n      for (let i = 0; i < 2; i += 1) {\n        const key = Object.keys(edges)[rand()];\n        edges[key].splice(rand(edges[key].length), 1);\n      }\n\n      const actualEdges = [];\n      Object.keys(edges).forEach((key) => {\n        edges[key].forEach((val) => {\n          let xCoord;\n          let yCoord;\n          if (key === 'x') {\n            xCoord = val;\n            yCoord = rand(mapWidth);\n          } else if (key === 'y') {\n            yCoord = val;\n            xCoord = rand(mapHeight);\n          }\n          actualEdges.push([xCoord, yCoord]);\n        });\n      });\n\n      // 1 means walkable for astar, 0 means obstacle\n      let noiseMask = noiseMap.map(row => row.map(point => Number(point <= 1)));\n      const graph = new __WEBPACK_IMPORTED_MODULE_1_javascript_astar__[\"Graph\"](noiseMask, {\n        diagonal: true,\n      });\n\n      const start = graph.grid[actualEdges[0][0]][actualEdges[0][1]];\n      const end = graph.grid[actualEdges[1][0]][actualEdges[1][1]];\n      const result = __WEBPACK_IMPORTED_MODULE_1_javascript_astar__[\"astar\"].search(graph, start, end);\n\n\n      const flattened = noiseMap.reduce((a, b) => a.concat(b));\n      const diffToMax = 1 - Math.max(...flattened);\n      noiseMap.map(row => row.map(point => point + diffToMax));\n\n      noiseMask = noiseMap.map(row => row.map(point => point + diffToMax));\n\n      const trySet = (x, y) => {\n        if (x < noiseMap.length && y < noiseMap[0].length) {\n          noiseMap[x][y] = 0.5 - (this.attributes.riverDepth / 2);\n        }\n      };\n      result.forEach((point) => {\n        const x = point.x + rand();\n        const y = point.y + rand();\n        trySet(x, y);\n        trySet(x + 1, y);\n        trySet(x, y + 1);\n        trySet(x + 1, y + 1);\n      });\n    }\n\n    if (options.extend) {\n      // cut away zeros\n      const toExtend = options.extend.slice(1, 14);\n\n      noiseMap.unshift(toExtend);\n      const delta = noiseMap[3].map((point, i) => (point - noiseMap[0][i]) / 3.0);\n      for (let i = 1; i < 3; i += 1) {\n        noiseMap[i] = noiseMap[i - 1].map((point, j) => point + delta[j]);\n      }\n    } else {\n      noiseMap.unshift(new Array(mapWidth).fill(0));\n    }\n    noiseMap.push(new Array(mapWidth).fill(0));\n    noiseMap = noiseMap.map(row => [0].concat(row, [0]));\n\n    this.heightMap = noiseMap;\n  }\n  _createGround() {\n    const ground = new pc.Entity('Ground');\n    ground.addComponent('model', {\n      type: 'box',\n    });\n    ground.model.material = this.attributes.terrainMaterial;\n\n    ground.setLocalPosition(this.attributes.offset.x, 0, this.attributes.offset.y);\n    ground.setLocalScale(this.attributes.size.x - 1,\n      this.attributes.groundThickness, this.attributes.size.y - 1);\n    this.entity.addChild(ground);\n  }\n  _createWater() {\n    const water = new pc.Entity('Water');\n    water.addComponent('model', {\n      type: 'box',\n    });\n    water.model.material = this.attributes.waterMaterial;\n    water.setLocalScale(this.attributes.size.x - 4,\n      this.attributes.waterLevel, this.attributes.size.y - 4);\n    water.setLocalPosition(this.attributes.offset.x,\n      this.attributes.waterLevel / 2, this.attributes.offset.y);\n    this.entity.addChild(water);\n  }\n  _createMesh() {\n    const width = this.attributes.size.x;\n    const height = this.attributes.size.y;\n\n    // A one dimensional array of numbers, holding where the vertices should located be on the mesh.\n    const positions = [];\n    // A one dimensional array of numbers, holding where the triangles are located on the mesh.\n    const indices = [];\n    // A one dimensional array of numbers, holding where the texture should be placed on the mesh.\n    const uvs = [];\n    // A normal map to correctly display light.\n    let vertexIndex = 0;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        positions.push(...this.coord2pos(x, y));\n        uvs.push(x / height, 1.0 - (y / width));\n\n        if (x < width - 1 && y < height - 1) {\n          // Creates first triangle of a square.\n          indices.push(vertexIndex, vertexIndex + width + 1, vertexIndex + width);\n          // Creates second triangle of a square.\n          indices.push(vertexIndex + width + 1, vertexIndex, vertexIndex + 1);\n        }\n\n        vertexIndex += 1;\n      }\n    }\n\n    const normals = pc.calculateNormals(positions, indices);\n    this.normals = normals;\n\n    const plane = pc.createMesh(__WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getApp().graphicsDevice, positions, {\n      indices,\n      normals,\n      uvs,\n    });\n\n    const node = new pc.GraphNode('TerrainNode');\n    const meshInstance = new pc.MeshInstance(node, plane, this.attributes.terrainMaterial);\n    const model = new pc.Model();\n\n    model.graph = node;\n    model.meshInstances = [meshInstance];\n\n    if (!this.entity.rigidbody) {\n      this.entity.addComponent('rigidbody', {\n        type: 'static',\n      });\n    }\n    if (!this.entity.collision) {\n      this.entity.addComponent('collision', {\n        type: 'mesh',\n      });\n    }\n\n    this.entity.collision.model = model;\n    __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getApp().scene.addModel(model);\n\n    const previousTerrainNode = this.entity.findByName('TerrainNode');\n    if (previousTerrainNode) {\n      this.entity.removeChild(previousTerrainNode);\n    }\n    this.entity.addChild(node);\n\n    if (this.model) {\n      __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getApp().scene.removeModel(this.model);\n    }\n    this.model = model;\n  }\n  _createRocks() {\n    const width = this.attributes.size.x;\n    const height = this.attributes.size.y;\n\n    for (let i = 0; i < rand(this.attributes.stoneRange.x, this.attributes.stoneRange.y); i += 1) {\n      const rock = __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getEntity('Prefabs', 'Rock').clone();\n      rock.enabled = true;\n      const y = rand(height * this.attributes.minStoneOffset,\n        height * (1 - this.attributes.minStoneOffset));\n      const x = rand(width * this.attributes.minStoneOffset,\n        width * (1 - this.attributes.minStoneOffset));\n      rock.setPosition(...this.coord2pos(x, y));\n    }\n  }\n\n  coord2pos(x, y) {\n    return [(this.topLeft.x + x),\n      (this.heightMap[y][x] ** 3) * this.attributes.meshHeightMultiplier,\n      (this.topLeft.y - y),\n    ];\n  }\n\n  grayOut() {\n    __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getApp().scene.removeModel(this.model);\n    this.model.meshInstances[0].material = this.attributes.grayTerrainMaterial;\n    __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getApp().scene.addModel(this.model);\n\n    this.entity.findByName('Water').enabled = false;\n    this.entity.findByName('Ground').model.material = this.attributes.grayTerrainMaterial;\n  }\n\n  constructor(parent, attributes = {}) {\n    super();\n    Promise.all([\n      __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getAsset('assets/materials/grass.json', 'material'),\n      __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getAsset('assets/materials/water.json', 'material'),\n      __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getAsset('assets/materials/gray.json', 'material'),\n    ]).then((arr) => {\n      const [terrainMaterial, waterMaterial, grayTerrainMaterial] =\n      arr.map(asset => asset.resource);\n      const defaultAttributes = {\n        offset: new pc.Vec2(0, 0),\n        size: new pc.Vec2(15, 45),\n        terrainMaterial,\n        waterMaterial,\n        grayTerrainMaterial,\n        waterLevel: 1,\n        meshHeightMultiplier: 5,\n        riverProbability: 1,\n        riverDepth: 0,\n        stoneRange: [2, 7],\n        minStoneOffset: 0.1,\n        groundThickness: 0.1,\n      };\n\n      super.setAttributes(defaultAttributes, attributes);\n      this.entity = parent;\n      this.topLeft = new pc.Vec2(-(this.attributes.offset.x + ((this.attributes.size.x - 1) / 2.0)),\n        this.attributes.offset.y + ((this.attributes.size.y - 1) / 2.0));\n\n      // this has to be called first in order for this.heightMap to exist\n      const noiseOptions = {};\n      if (this.attributes.extend) {\n        noiseOptions.extend = this.attributes.extend;\n      }\n      this._createNoiseMap(noiseOptions);\n\n      // these need this.heightMap\n      this._createMesh();\n      this._createGround();\n      this._createWater();\n      this._createRocks();\n    });\n  }\n}\n/* unused harmony export Terrain */\n\n\nclass Level extends __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a {\n  _createEndZone() {\n    this.endZone = new pc.Entity();\n    this.endZone.addComponent('model', {\n      type: 'box',\n    });\n    this.endZone.model.material = this.attributes.endzoneMaterial;\n\n    this.endZone.setLocalScale(this.attributes.size.x - 1, 10, 5);\n    this.endZone.setLocalPosition(0, 5, (this.attributes.size.y / -2.0) + 3);\n    //\n    // super.addTimedUpdate(() => {\n    //   if (this.isCompleted() && !this.grayedOut) {\n    //     this.grayedOut = true;\n    //     this.terrain.grayOut();\n    //     this.endZone.destroy();\n    //\n    //     this.onComplete();\n    //   }\n    // }, 1);\n    this.entity.addChild(this.endZone);\n  }\n  isCompleted() {\n    // TODO: check if all players are in the endzone\n    return true;\n  }\n  onComplete() {\n    // this is usually overridden from an external function\n  }\n  constructor(parent, attributes = {}) {\n    super();\n    super.setAttributes({\n      size: new pc.Vec2(15, 45),\n      offset: new pc.Vec2(0, 0),\n    }, attributes);\n\n    __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a.getAsset('assets/materials/endzone.json', 'material').then((asset) => {\n      super.setAttributes({\n        endzoneMaterial: asset.resource,\n      });\n\n      this._createEndZone();\n    });\n\n    this.entity = new pc.Entity();\n    this.entity.setPosition(this.attributes.offset.x, 0, this.attributes.offset.y);\n    parent.addChild(this.entity);\n\n    const terrainEntity = new pc.Entity();\n    this.entity.addChild(terrainEntity);\n\n    this.terrain = new Terrain(terrainEntity, {\n      size: this.attributes.size,\n    });\n  }\n}\n/* unused harmony export Level */\n\n\nclass Stage extends __WEBPACK_IMPORTED_MODULE_2__gameobject___default.a {\n  constructor(entity, orbitCamera, attributes = {}) {\n    super();\n    super.setAttributes({\n      levelCount: 3,\n    }, attributes);\n\n    this.orbitCam = orbitCamera;\n    this.currentOffset = new pc.Vec2(0, 0);\n    this.levels = [];\n\n    this.levelParent = new pc.Entity();\n    entity.addChild(this.levelParent);\n\n    this.createNextLevel();\n  }\n\n  createNextLevel() {\n    const attributes = {\n      offset: this.currentOffset,\n    };\n\n    if (this.levels.length > 0) {\n      attributes.extend = this.levels[this.levels.length - 1].terrain.heightMap[0];\n    }\n\n    const level = new Level(this.levelParent, attributes);\n\n    setTimeout(() => this.orbitCam.focus(level.entity, true), 500);\n\n    this.levels.push(level);\n    this.currentOffset.y -= 43;\n    if (this.levels.length < this.attributes.levelCount) {\n      level.onComplete = () => this.createNextLevel();\n    }\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Stage;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!***************************************!*\
  !*** ./node_modules/noisejs/index.js ***!
  \***************************************/
/*! no static exports found */
/*! exports used: Noise */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\n(function(global){\n\n  // Passing in seed will seed this Noise instance\n  function Noise(seed) {\n    function Grad(x, y, z) {\n      this.x = x; this.y = y; this.z = z;\n    }\n\n    Grad.prototype.dot2 = function(x, y) {\n      return this.x*x + this.y*y;\n    };\n\n    Grad.prototype.dot3 = function(x, y, z) {\n      return this.x*x + this.y*y + this.z*z;\n    };\n\n    this.grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n                 new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n                 new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n\n    this.p = [151,160,137,91,90,15,\n    131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n    190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n    88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n    77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n    102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n    135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n    5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n    223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n    129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n    251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n    49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n    138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n    // To remove the need for index wrapping, double the permutation table length\n    this.perm = new Array(512);\n    this.gradP = new Array(512);\n\n    this.seed(seed || 0);\n  }\n\n  // This isn't a very good seeding function, but it works ok. It supports 2^16\n  // different seed values. Write something better if you need more seeds.\n  Noise.prototype.seed = function(seed) {\n    if(seed > 0 && seed < 1) {\n      // Scale the seed out\n      seed *= 65536;\n    }\n\n    seed = Math.floor(seed);\n    if(seed < 256) {\n      seed |= seed << 8;\n    }\n\n    var p = this.p;\n    for(var i = 0; i < 256; i++) {\n      var v;\n      if (i & 1) {\n        v = p[i] ^ (seed & 255);\n      } else {\n        v = p[i] ^ ((seed>>8) & 255);\n      }\n\n      var perm = this.perm;\n      var gradP = this.gradP;\n      perm[i] = perm[i + 256] = v;\n      gradP[i] = gradP[i + 256] = this.grad3[v % 12];\n    }\n  };\n\n  /*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/\n\n  // Skewing and unskewing factors for 2, 3, and 4 dimensions\n  var F2 = 0.5*(Math.sqrt(3)-1);\n  var G2 = (3-Math.sqrt(3))/6;\n\n  var F3 = 1/3;\n  var G3 = 1/6;\n\n  // 2D simplex noise\n  Noise.prototype.simplex2 = function(xin, yin) {\n    var n0, n1, n2; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin+yin)*F2; // Hairy factor for 2D\n    var i = Math.floor(xin+s);\n    var j = Math.floor(yin+s);\n    var t = (i+j)*G2;\n    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin-j+t;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      i1=1; j1=0;\n    } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      i1=0; j1=1;\n    }\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    var y1 = y0 - j1 + G2;\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n    var y2 = y0 - 1 + 2 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    i &= 255;\n    j &= 255;\n\n    var perm = this.perm;\n    var gradP = this.gradP;\n    var gi0 = gradP[i+perm[j]];\n    var gi1 = gradP[i+i1+perm[j+j1]];\n    var gi2 = gradP[i+1+perm[j+1]];\n    // Calculate the contribution from the three corners\n    var t0 = 0.5 - x0*x0-y0*y0;\n    if(t0<0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1*x1-y1*y1;\n    if(t1<0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot2(x1, y1);\n    }\n    var t2 = 0.5 - x2*x2-y2*y2;\n    if(t2<0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot2(x2, y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70 * (n0 + n1 + n2);\n  };\n\n  // 3D simplex noise\n  Noise.prototype.simplex3 = function(xin, yin, zin) {\n    var n0, n1, n2, n3; // Noise contributions from the four corners\n\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin+yin+zin)*F3; // Hairy factor for 2D\n    var i = Math.floor(xin+s);\n    var j = Math.floor(yin+s);\n    var k = Math.floor(zin+s);\n\n    var t = (i+j+k)*G3;\n    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin-j+t;\n    var z0 = zin-k+t;\n\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if(x0 >= y0) {\n      if(y0 >= z0)      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; }\n      else if(x0 >= z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; }\n      else              { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }\n    } else {\n      if(y0 < z0)      { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; }\n      else if(x0 < z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; }\n      else             { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; }\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    var x1 = x0 - i1 + G3; // Offsets for second corner\n    var y1 = y0 - j1 + G3;\n    var z1 = z0 - k1 + G3;\n\n    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n    var y2 = y0 - j2 + 2 * G3;\n    var z2 = z0 - k2 + 2 * G3;\n\n    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n    var y3 = y0 - 1 + 3 * G3;\n    var z3 = z0 - 1 + 3 * G3;\n\n    // Work out the hashed gradient indices of the four simplex corners\n    i &= 255;\n    j &= 255;\n    k &= 255;\n\n    var perm = this.perm;\n    var gradP = this.gradP;\n    var gi0 = gradP[i+   perm[j+   perm[k   ]]];\n    var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];\n    var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];\n    var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];\n\n    // Calculate the contribution from the four corners\n    var t0 = 0.5 - x0*x0-y0*y0-z0*z0;\n    if(t0<0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1*x1-y1*y1-z1*z1;\n    if(t1<0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n    }\n    var t2 = 0.5 - x2*x2-y2*y2-z2*z2;\n    if(t2<0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n    }\n    var t3 = 0.5 - x3*x3-y3*y3-z3*z3;\n    if(t3<0) {\n      n3 = 0;\n    } else {\n      t3 *= t3;\n      n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 32 * (n0 + n1 + n2 + n3);\n\n  };\n\n  // ##### Perlin noise stuff\n\n  function fade(t) {\n    return t*t*t*(t*(t*6-15)+10);\n  }\n\n  function lerp(a, b, t) {\n    return (1-t)*a + t*b;\n  }\n\n  // 2D Perlin Noise\n  Noise.prototype.perlin2 = function(x, y) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y);\n    // Get relative xy coordinates of point within that cell\n    x = x - X; y = y - Y;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255; Y = Y & 255;\n\n    // Calculate noise contributions from each of the four corners\n    var perm = this.perm;\n    var gradP = this.gradP;\n    var n00 = gradP[X+perm[Y]].dot2(x, y);\n    var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);\n    var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);\n    var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);\n\n    // Compute the fade curve value for x\n    var u = fade(x);\n\n    // Interpolate the four results\n    return lerp(\n        lerp(n00, n10, u),\n        lerp(n01, n11, u),\n       fade(y));\n  };\n\n  // 3D Perlin Noise\n  Noise.prototype.perlin3 = function(x, y, z) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n    // Get relative xyz coordinates of point within that cell\n    x = x - X; y = y - Y; z = z - Z;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255; Y = Y & 255; Z = Z & 255;\n\n    // Calculate noise contributions from each of the eight corners\n    var perm = this.perm;\n    var gradP = this.gradP;\n    var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);\n    var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);\n    var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);\n    var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);\n    var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);\n    var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);\n    var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);\n    var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);\n\n    // Compute the fade curve value for x, y, z\n    var u = fade(x);\n    var v = fade(y);\n    var w = fade(z);\n\n    // Interpolate\n    return lerp(\n        lerp(\n          lerp(n000, n100, u),\n          lerp(n001, n101, u), w),\n        lerp(\n          lerp(n010, n110, u),\n          lerp(n011, n111, u), w),\n       v);\n  };\n\n  global.Noise = Noise;\n\n})( false ? this : module.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!************************************************!*\
  !*** ./node_modules/javascript-astar/astar.js ***!
  \************************************************/
/*! no static exports found */
/*! exports used: Graph, astar */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n\n(function(definition) {\n    /* global module, define */\n    if(typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = definition();\n    } else if(true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n        var exports = definition();\n        window.astar = exports.astar;\n        window.Graph = exports.Graph;\n    }\n})(function() {\n\nfunction pathTo(node){\n    var curr = node,\n        path = [];\n    while(curr.parent) {\n        path.unshift(curr);\n        curr = curr.parent;\n    }\n    return path;\n}\n\nfunction getHeap() {\n    return new BinaryHeap(function(node) {\n        return node.f;\n    });\n}\n\nvar astar = {\n    /**\n    * Perform an A* Search on a graph given a start and end node.\n    * @param {Graph} graph\n    * @param {GridNode} start\n    * @param {GridNode} end\n    * @param {Object} [options]\n    * @param {bool} [options.closest] Specifies whether to return the\n               path to the closest node if the target is unreachable.\n    * @param {Function} [options.heuristic] Heuristic function (see\n    *          astar.heuristics).\n    */\n    search: function(graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        var heuristic = options.heuristic || astar.heuristics.manhattan,\n            closest = options.closest || false;\n\n        var openHeap = getHeap(),\n            closestNode = start; // set the start node to be the closest if required\n\n        start.h = heuristic(start, end);\n\n        openHeap.push(start);\n\n        while(openHeap.size() > 0) {\n\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            var currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if(currentNode === end) {\n                return pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            var neighbors = graph.neighbors(currentNode);\n\n            for (var i = 0, il = neighbors.length; i < il; ++i) {\n                var neighbor = neighbors[i];\n\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                var gScore = currentNode.g + neighbor.getCost(currentNode),\n                    beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n                    neighbor.h = neighbor.h || heuristic(neighbor, end);\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    }\n                    else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    },\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    heuristics: {\n        manhattan: function(pos0, pos1) {\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return d1 + d2;\n        },\n        diagonal: function(pos0, pos1) {\n            var D = 1;\n            var D2 = Math.sqrt(2);\n            var d1 = Math.abs(pos1.x - pos0.x);\n            var d2 = Math.abs(pos1.y - pos0.y);\n            return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));\n        }\n    },\n    cleanNode:function(node){\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n};\n\n/**\n* A graph memory structure\n* @param {Array} gridIn 2D array of input weights\n* @param {Object} [options]\n* @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed\n*/\nfunction Graph(gridIn, options) {\n    options = options || {};\n    this.nodes = [];\n    this.diagonal = !!options.diagonal;\n    this.grid = [];\n    for (var x = 0; x < gridIn.length; x++) {\n        this.grid[x] = [];\n\n        for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n            var node = new GridNode(x, y, row[y]);\n            this.grid[x][y] = node;\n            this.nodes.push(node);\n        }\n    }\n    this.init();\n}\n\nGraph.prototype.init = function() {\n    this.dirtyNodes = [];\n    for (var i = 0; i < this.nodes.length; i++) {\n        astar.cleanNode(this.nodes[i]);\n    }\n};\n\nGraph.prototype.cleanDirty = function() {\n    for (var i = 0; i < this.dirtyNodes.length; i++) {\n        astar.cleanNode(this.dirtyNodes[i]);\n    }\n    this.dirtyNodes = [];\n};\n\nGraph.prototype.markDirty = function(node) {\n    this.dirtyNodes.push(node);\n};\n\nGraph.prototype.neighbors = function(node) {\n    var ret = [],\n        x = node.x,\n        y = node.y,\n        grid = this.grid;\n\n    // West\n    if(grid[x-1] && grid[x-1][y]) {\n        ret.push(grid[x-1][y]);\n    }\n\n    // East\n    if(grid[x+1] && grid[x+1][y]) {\n        ret.push(grid[x+1][y]);\n    }\n\n    // South\n    if(grid[x] && grid[x][y-1]) {\n        ret.push(grid[x][y-1]);\n    }\n\n    // North\n    if(grid[x] && grid[x][y+1]) {\n        ret.push(grid[x][y+1]);\n    }\n\n    if (this.diagonal) {\n        // Southwest\n        if(grid[x-1] && grid[x-1][y-1]) {\n            ret.push(grid[x-1][y-1]);\n        }\n\n        // Southeast\n        if(grid[x+1] && grid[x+1][y-1]) {\n            ret.push(grid[x+1][y-1]);\n        }\n\n        // Northwest\n        if(grid[x-1] && grid[x-1][y+1]) {\n            ret.push(grid[x-1][y+1]);\n        }\n\n        // Northeast\n        if(grid[x+1] && grid[x+1][y+1]) {\n            ret.push(grid[x+1][y+1]);\n        }\n    }\n\n    return ret;\n};\n\nGraph.prototype.toString = function() {\n    var graphString = [],\n        nodes = this.grid, // when using grid\n        rowDebug, row, y, l;\n    for (var x = 0, len = nodes.length; x < len; x++) {\n        rowDebug = [];\n        row = nodes[x];\n        for (y = 0, l = row.length; y < l; y++) {\n            rowDebug.push(row[y].weight);\n        }\n        graphString.push(rowDebug.join(\" \"));\n    }\n    return graphString.join(\"\\n\");\n};\n\nfunction GridNode(x, y, weight) {\n    this.x = x;\n    this.y = y;\n    this.weight = weight;\n}\n\nGridNode.prototype.toString = function() {\n    return \"[\" + this.x + \" \" + this.y + \"]\";\n};\n\nGridNode.prototype.getCost = function(fromNeighbor) {\n    // Take diagonal weight into consideration.\n    if (fromNeighbor && fromNeighbor.x != this.x && fromNeighbor.y != this.y) {\n        return this.weight * 1.41421;\n    }\n    return this.weight;\n};\n\nGridNode.prototype.isWall = function() {\n    return this.weight === 0;\n};\n\nfunction BinaryHeap(scoreFunction){\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n    push: function(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    },\n    pop: function() {\n        // Store the first element so we can return it later.\n        var result = this.content[0];\n        // Get the element at the end of the array.\n        var end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    },\n    remove: function(node) {\n        var i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        var end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            }\n            else {\n                this.bubbleUp(i);\n            }\n        }\n    },\n    size: function() {\n        return this.content.length;\n    },\n    rescoreElement: function(node) {\n        this.sinkDown(this.content.indexOf(node));\n    },\n    sinkDown: function(n) {\n        // Fetch the element that has to be sunk.\n        var element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n\n            // Compute the parent element's index, and fetch it.\n            var parentN = ((n + 1) >> 1) - 1,\n                parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    },\n    bubbleUp: function(n) {\n        // Look up the target element and its score.\n        var length = this.content.length,\n            element = this.content[n],\n            elemScore = this.scoreFunction(element);\n\n        while(true) {\n            // Compute the indices of the child elements.\n            var child2N = (n + 1) << 1,\n                child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            var swap = null,\n                child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                var child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore){\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                var child2 = this.content[child2N],\n                    child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            }\n            // Otherwise, we are done.\n            else {\n                break;\n            }\n        }\n    }\n};\n\nreturn {\n    astar: astar,\n    Graph: Graph\n};\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ })
/******/ ]);